{"ast":null,"code":"// Game utility functions\n\nexport const generateRoomCode = () => {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n};\nexport const calculatePoints = (isCorrect, timeLeft, maxTime = 20) => {\n  if (!isCorrect) return 0;\n  // More points for faster answers\n  const timeBonus = Math.floor(timeLeft / maxTime * 500);\n  return Math.max(500, 500 + timeBonus);\n};\nexport const simulateOtherPlayers = (players, currentPlayerId, isCorrect) => {\n  return players.map(p => {\n    if (p.id === currentPlayerId) return p;\n\n    // AI players have varying skill levels\n    const aiSkillLevel = p.skillLevel || 0.65; // 65% correct rate by default\n    const randomCorrect = Math.random() < aiSkillLevel;\n    const randomTimeLeft = Math.floor(Math.random() * 15) + 5; // 5-20 seconds\n    const randomPoints = randomCorrect ? calculatePoints(randomCorrect, randomTimeLeft) : 0;\n    return {\n      ...p,\n      score: p.score + randomPoints,\n      lastAnswer: randomCorrect,\n      lastPoints: randomPoints\n    };\n  });\n};\nexport const generateAIPlayers = count => {\n  const funnyNames = ['MathWizard', 'DerivativeDemon', 'CalculusKing', 'NumberNinja', 'AlgebraAce', 'TrigTitan', 'IntegralHero', 'FunctionPhantom', 'EquationExpert', 'ProofPro', 'LimitLord', 'TheoremThrasher', 'AxiomAvenger', 'FormulaFiend', 'GraphGuru', 'SlopeSamurai', 'TangentTornado', 'ChainRuleChamp', 'ProductPrince', 'QuotientQueen'];\n  const skillLevels = [0.5, 0.6, 0.65, 0.7, 0.75, 0.8]; // Varying difficulty\n\n  return Array.from({\n    length: count\n  }, (_, i) => ({\n    id: `ai-${Date.now()}-${i}`,\n    name: funnyNames[Math.floor(Math.random() * funnyNames.length)],\n    score: 0,\n    isAI: true,\n    skillLevel: skillLevels[Math.floor(Math.random() * skillLevels.length)],\n    lastAnswer: null,\n    lastPoints: 0\n  }));\n};\nexport const formatTime = seconds => {\n  if (seconds < 60) return `${seconds}s`;\n  const mins = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\n};\nexport const getPerformanceAnalysis = (player, totalQuestions) => {\n  var _player$answers;\n  const correctCount = ((_player$answers = player.answers) === null || _player$answers === void 0 ? void 0 : _player$answers.filter(a => a.correct).length) || 0;\n  const accuracy = Math.round(correctCount / totalQuestions * 100);\n  const avgPoints = Math.round(player.score / totalQuestions);\n  let grade = 'F';\n  if (accuracy >= 90) grade = 'A+';else if (accuracy >= 80) grade = 'A';else if (accuracy >= 70) grade = 'B';else if (accuracy >= 60) grade = 'C';else if (accuracy >= 50) grade = 'D';\n  let feedback = '';\n  if (accuracy >= 90) feedback = 'Outstanding! You\\'re a calculus master! üèÜ';else if (accuracy >= 80) feedback = 'Excellent work! Keep it up! ‚≠ê';else if (accuracy >= 70) feedback = 'Good job! You\\'re getting there! üëç';else if (accuracy >= 60) feedback = 'Not bad! Keep practicing! üìö';else feedback = 'Keep studying! You can do better! üí™';\n  return {\n    correctCount,\n    accuracy,\n    avgPoints,\n    grade,\n    feedback\n  };\n};\nexport const avatars = [{\n  id: 1,\n  emoji: 'üéÉ',\n  name: 'Pumpkin'\n}, {\n  id: 2,\n  emoji: 'üëª',\n  name: 'Ghost'\n}, {\n  id: 3,\n  emoji: 'üíÄ',\n  name: 'Skeleton'\n}, {\n  id: 4,\n  emoji: 'ü¶á',\n  name: 'Bat'\n}, {\n  id: 5,\n  emoji: 'üê±',\n  name: 'Black Cat'\n}, {\n  id: 6,\n  emoji: 'üßõ',\n  name: 'Vampire'\n}, {\n  id: 7,\n  emoji: 'üßü',\n  name: 'Zombie'\n}, {\n  id: 8,\n  emoji: 'üï∑Ô∏è',\n  name: 'Spider'\n}];\nexport default {\n  generateRoomCode,\n  calculatePoints,\n  simulateOtherPlayers,\n  generateAIPlayers,\n  formatTime,\n  getPerformanceAnalysis,\n  avatars\n};","map":{"version":3,"names":["generateRoomCode","Math","random","toString","substring","toUpperCase","calculatePoints","isCorrect","timeLeft","maxTime","timeBonus","floor","max","simulateOtherPlayers","players","currentPlayerId","map","p","id","aiSkillLevel","skillLevel","randomCorrect","randomTimeLeft","randomPoints","score","lastAnswer","lastPoints","generateAIPlayers","count","funnyNames","skillLevels","Array","from","length","_","i","Date","now","name","isAI","formatTime","seconds","mins","secs","padStart","getPerformanceAnalysis","player","totalQuestions","_player$answers","correctCount","answers","filter","a","correct","accuracy","round","avgPoints","grade","feedback","avatars","emoji"],"sources":["/Users/peterrabbit/Documents/GitHub/Spookathon-2025/spooky-cat-calc-game/src/utils/gameLogic.js"],"sourcesContent":["// Game utility functions\n\nexport const generateRoomCode = () => {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n};\n\nexport const calculatePoints = (isCorrect, timeLeft, maxTime = 20) => {\n  if (!isCorrect) return 0;\n  // More points for faster answers\n  const timeBonus = Math.floor((timeLeft / maxTime) * 500);\n  return Math.max(500, 500 + timeBonus);\n};\n\nexport const simulateOtherPlayers = (players, currentPlayerId, isCorrect) => {\n  return players.map(p => {\n    if (p.id === currentPlayerId) return p;\n    \n    // AI players have varying skill levels\n    const aiSkillLevel = p.skillLevel || 0.65; // 65% correct rate by default\n    const randomCorrect = Math.random() < aiSkillLevel;\n    const randomTimeLeft = Math.floor(Math.random() * 15) + 5; // 5-20 seconds\n    const randomPoints = randomCorrect ? calculatePoints(randomCorrect, randomTimeLeft) : 0;\n    \n    return {\n      ...p,\n      score: p.score + randomPoints,\n      lastAnswer: randomCorrect,\n      lastPoints: randomPoints\n    };\n  });\n};\n\nexport const generateAIPlayers = (count) => {\n  const funnyNames = [\n    'MathWizard', 'DerivativeDemon', 'CalculusKing', 'NumberNinja',\n    'AlgebraAce', 'TrigTitan', 'IntegralHero', 'FunctionPhantom',\n    'EquationExpert', 'ProofPro', 'LimitLord', 'TheoremThrasher',\n    'AxiomAvenger', 'FormulaFiend', 'GraphGuru', 'SlopeSamurai',\n    'TangentTornado', 'ChainRuleChamp', 'ProductPrince', 'QuotientQueen'\n  ];\n  \n  const skillLevels = [0.5, 0.6, 0.65, 0.7, 0.75, 0.8]; // Varying difficulty\n  \n  return Array.from({ length: count }, (_, i) => ({\n    id: `ai-${Date.now()}-${i}`,\n    name: funnyNames[Math.floor(Math.random() * funnyNames.length)],\n    score: 0,\n    isAI: true,\n    skillLevel: skillLevels[Math.floor(Math.random() * skillLevels.length)],\n    lastAnswer: null,\n    lastPoints: 0\n  }));\n};\n\nexport const formatTime = (seconds) => {\n  if (seconds < 60) return `${seconds}s`;\n  const mins = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\n};\n\nexport const getPerformanceAnalysis = (player, totalQuestions) => {\n  const correctCount = player.answers?.filter(a => a.correct).length || 0;\n  const accuracy = Math.round((correctCount / totalQuestions) * 100);\n  const avgPoints = Math.round(player.score / totalQuestions);\n  \n  let grade = 'F';\n  if (accuracy >= 90) grade = 'A+';\n  else if (accuracy >= 80) grade = 'A';\n  else if (accuracy >= 70) grade = 'B';\n  else if (accuracy >= 60) grade = 'C';\n  else if (accuracy >= 50) grade = 'D';\n  \n  let feedback = '';\n  if (accuracy >= 90) feedback = 'Outstanding! You\\'re a calculus master! üèÜ';\n  else if (accuracy >= 80) feedback = 'Excellent work! Keep it up! ‚≠ê';\n  else if (accuracy >= 70) feedback = 'Good job! You\\'re getting there! üëç';\n  else if (accuracy >= 60) feedback = 'Not bad! Keep practicing! üìö';\n  else feedback = 'Keep studying! You can do better! üí™';\n  \n  return {\n    correctCount,\n    accuracy,\n    avgPoints,\n    grade,\n    feedback\n  };\n};\n\nexport const avatars = [\n  { id: 1, emoji: 'üéÉ', name: 'Pumpkin' },\n  { id: 2, emoji: 'üëª', name: 'Ghost' },\n  { id: 3, emoji: 'üíÄ', name: 'Skeleton' },\n  { id: 4, emoji: 'ü¶á', name: 'Bat' },\n  { id: 5, emoji: 'üê±', name: 'Black Cat' },\n  { id: 6, emoji: 'üßõ', name: 'Vampire' },\n  { id: 7, emoji: 'üßü', name: 'Zombie' },\n  { id: 8, emoji: 'üï∑Ô∏è', name: 'Spider' }\n];\n\nexport default {\n  generateRoomCode,\n  calculatePoints,\n  simulateOtherPlayers,\n  generateAIPlayers,\n  formatTime,\n  getPerformanceAnalysis,\n  avatars\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}