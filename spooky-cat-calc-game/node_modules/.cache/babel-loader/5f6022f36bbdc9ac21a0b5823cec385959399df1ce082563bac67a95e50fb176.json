{"ast":null,"code":"// Theme system for different visual styles\n\nexport const themes = {\n  spooky: {\n    name: \"🎃 Spooky Halloween\",\n    colors: {\n      primary: \"from-purple-600 to-orange-600\",\n      secondary: \"from-purple-700 to-orange-700\",\n      accent: \"bg-orange-500\",\n      text: \"text-orange-300\",\n      jumpscare: \"bg-red-600\"\n    },\n    emojis: {\n      main: ['🎃', '👻', '💀', '🦇', '🕷️'],\n      correct: '✨',\n      wrong: '💀',\n      winner: '🏆'\n    }\n  },\n  ocean: {\n    name: \"🌊 Underwater Adventure\",\n    colors: {\n      primary: \"from-blue-600 to-teal-600\",\n      secondary: \"from-blue-700 to-teal-700\",\n      accent: \"bg-teal-500\",\n      text: \"text-teal-300\",\n      jumpscare: \"bg-blue-900\"\n    },\n    emojis: {\n      main: ['🌊', '🐠', '🐚', '🐙', '🦈'],\n      correct: '⭐',\n      wrong: '🦈',\n      winner: '👑'\n    }\n  },\n  space: {\n    name: \"🚀 Space Odyssey\",\n    colors: {\n      primary: \"from-indigo-900 to-purple-900\",\n      secondary: \"from-indigo-950 to-purple-950\",\n      accent: \"bg-purple-500\",\n      text: \"text-purple-200\",\n      jumpscare: \"bg-black\"\n    },\n    emojis: {\n      main: ['🚀', '🌟', '🛸', '🌌', '👽'],\n      correct: '⭐',\n      wrong: '💥',\n      winner: '🏆'\n    }\n  },\n  retro: {\n    name: \"👾 Retro Arcade\",\n    colors: {\n      primary: \"from-pink-500 to-yellow-500\",\n      secondary: \"from-pink-600 to-yellow-600\",\n      accent: \"bg-yellow-400\",\n      text: \"text-pink-300\",\n      jumpscare: \"bg-pink-600\"\n    },\n    emojis: {\n      main: ['👾', '🕹️', '💎', '⚡', '🎮'],\n      correct: '⭐',\n      wrong: '💀',\n      winner: '🏆'\n    }\n  },\n  forest: {\n    name: \"🌲 Enchanted Forest\",\n    colors: {\n      primary: \"from-green-600 to-emerald-700\",\n      secondary: \"from-green-700 to-emerald-800\",\n      accent: \"bg-emerald-500\",\n      text: \"text-emerald-300\",\n      jumpscare: \"bg-green-900\"\n    },\n    emojis: {\n      main: ['🌲', '🍄', '🦌', '🌿', '🧚'],\n      correct: '✨',\n      wrong: '🍂',\n      winner: '👑'\n    }\n  },\n  neon: {\n    name: \"✨ Neon Nights\",\n    colors: {\n      primary: \"from-fuchsia-500 via-cyan-500 to-violet-500\",\n      secondary: \"from-fuchsia-600 via-cyan-600 to-violet-600\",\n      accent: \"bg-cyan-500\",\n      text: \"text-fuchsia-300\",\n      jumpscare: \"bg-fuchsia-700\"\n    },\n    emojis: {\n      main: ['✨', '💎', '🌈', '⚡', '💫'],\n      correct: '✨',\n      wrong: '💔',\n      winner: '👑'\n    }\n  }\n};\n\n// Get random emoji from theme\nexport const getRandomEmoji = (theme, type = 'main') => {\n  var _themes$theme;\n  const emojis = (_themes$theme = themes[theme]) === null || _themes$theme === void 0 ? void 0 : _themes$theme.emojis[type];\n  if (Array.isArray(emojis)) {\n    return emojis[Math.floor(Math.random() * emojis.length)];\n  }\n  return emojis || '🎃';\n};\n\n// Get theme by name\nexport const getTheme = themeName => {\n  return themes[themeName] || themes.spooky;\n};\n\n// Get all theme names for selector\nexport const getThemeNames = () => {\n  return Object.keys(themes);\n};\nexport default themes;","map":{"version":3,"names":["themes","spooky","name","colors","primary","secondary","accent","text","jumpscare","emojis","main","correct","wrong","winner","ocean","space","retro","forest","neon","getRandomEmoji","theme","type","_themes$theme","Array","isArray","Math","floor","random","length","getTheme","themeName","getThemeNames","Object","keys"],"sources":["/Users/peterrabbit/Documents/GitHub/Spookathon-2025/spooky-cat-calc-game/src/utils/themes.js"],"sourcesContent":["// Theme system for different visual styles\n\nexport const themes = {\n  spooky: {\n    name: \"🎃 Spooky Halloween\",\n    colors: {\n      primary: \"from-purple-600 to-orange-600\",\n      secondary: \"from-purple-700 to-orange-700\",\n      accent: \"bg-orange-500\",\n      text: \"text-orange-300\",\n      jumpscare: \"bg-red-600\"\n    },\n    emojis: {\n      main: ['🎃', '👻', '💀', '🦇', '🕷️'],\n      correct: '✨',\n      wrong: '💀',\n      winner: '🏆'\n    }\n  },\n  \n  ocean: {\n    name: \"🌊 Underwater Adventure\",\n    colors: {\n      primary: \"from-blue-600 to-teal-600\",\n      secondary: \"from-blue-700 to-teal-700\",\n      accent: \"bg-teal-500\",\n      text: \"text-teal-300\",\n      jumpscare: \"bg-blue-900\"\n    },\n    emojis: {\n      main: ['🌊', '🐠', '🐚', '🐙', '🦈'],\n      correct: '⭐',\n      wrong: '🦈',\n      winner: '👑'\n    }\n  },\n  \n  space: {\n    name: \"🚀 Space Odyssey\",\n    colors: {\n      primary: \"from-indigo-900 to-purple-900\",\n      secondary: \"from-indigo-950 to-purple-950\",\n      accent: \"bg-purple-500\",\n      text: \"text-purple-200\",\n      jumpscare: \"bg-black\"\n    },\n    emojis: {\n      main: ['🚀', '🌟', '🛸', '🌌', '👽'],\n      correct: '⭐',\n      wrong: '💥',\n      winner: '🏆'\n    }\n  },\n  \n  retro: {\n    name: \"👾 Retro Arcade\",\n    colors: {\n      primary: \"from-pink-500 to-yellow-500\",\n      secondary: \"from-pink-600 to-yellow-600\",\n      accent: \"bg-yellow-400\",\n      text: \"text-pink-300\",\n      jumpscare: \"bg-pink-600\"\n    },\n    emojis: {\n      main: ['👾', '🕹️', '💎', '⚡', '🎮'],\n      correct: '⭐',\n      wrong: '💀',\n      winner: '🏆'\n    }\n  },\n  \n  forest: {\n    name: \"🌲 Enchanted Forest\",\n    colors: {\n      primary: \"from-green-600 to-emerald-700\",\n      secondary: \"from-green-700 to-emerald-800\",\n      accent: \"bg-emerald-500\",\n      text: \"text-emerald-300\",\n      jumpscare: \"bg-green-900\"\n    },\n    emojis: {\n      main: ['🌲', '🍄', '🦌', '🌿', '🧚'],\n      correct: '✨',\n      wrong: '🍂',\n      winner: '👑'\n    }\n  },\n  \n  neon: {\n    name: \"✨ Neon Nights\",\n    colors: {\n      primary: \"from-fuchsia-500 via-cyan-500 to-violet-500\",\n      secondary: \"from-fuchsia-600 via-cyan-600 to-violet-600\",\n      accent: \"bg-cyan-500\",\n      text: \"text-fuchsia-300\",\n      jumpscare: \"bg-fuchsia-700\"\n    },\n    emojis: {\n      main: ['✨', '💎', '🌈', '⚡', '💫'],\n      correct: '✨',\n      wrong: '💔',\n      winner: '👑'\n    }\n  }\n};\n\n// Get random emoji from theme\nexport const getRandomEmoji = (theme, type = 'main') => {\n  const emojis = themes[theme]?.emojis[type];\n  if (Array.isArray(emojis)) {\n    return emojis[Math.floor(Math.random() * emojis.length)];\n  }\n  return emojis || '🎃';\n};\n\n// Get theme by name\nexport const getTheme = (themeName) => {\n  return themes[themeName] || themes.spooky;\n};\n\n// Get all theme names for selector\nexport const getThemeNames = () => {\n  return Object.keys(themes);\n};\n\nexport default themes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}